/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package VIEW;

import DAO.BrancoDAO;
import DAO.CandidatoDAO;
import DAO.NuloDAO;
import DAO.PartidoDAO;
import MODEL.Gravar;
import java.io.File;
import static java.lang.String.format;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.logging.Formatter;
import javax.swing.JFileChooser;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aluno
 */
public class ResultadosVIEW extends javax.swing.JFrame {

    /**
     * Creates new form ResultadosVIEW
     */
    public ResultadosVIEW() {
        initComponents();      
    }
    int quantidadeTotal = 0;
    int quantidadeBranco = 0;
    int quantidadeNulo = 0; 
    StringBuilder b; 
    
 String partidoSelecionado;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbCandidatos = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        rbNome = new javax.swing.JRadioButton();
        rbVoto = new javax.swing.JRadioButton();
        cbPartido = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtContadorCandidatos = new javax.swing.JLabel();
        txtContadorNulo = new javax.swing.JLabel();
        txtContadorBranco = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Resultados");
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/arrow_left.png"))); // NOI18N
        jButton3.setText("Sair");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton3MousePressed(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tbCandidatos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        tbCandidatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tbCandidatos);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        jLabel6.setText("Resultados");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Ordenar");

        buttonGroup1.add(rbNome);
        rbNome.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbNome.setText("por candidato");
        rbNome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbNomeMousePressed(evt);
            }
        });
        rbNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbNomeActionPerformed(evt);
            }
        });

        buttonGroup1.add(rbVoto);
        rbVoto.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        rbVoto.setText("por votos");
        rbVoto.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                rbVotoMousePressed(evt);
            }
        });

        cbPartido.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        cbPartido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        cbPartido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPartidoActionPerformed(evt);
            }
        });
        cbPartido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cbPartidoKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Filtrar por partido:");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Votos em branco: ");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Votos nulos: ");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Total de votos: ");

        txtContadorCandidatos.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtContadorCandidatos.setText("___");

        txtContadorNulo.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtContadorNulo.setText("___");

        txtContadorBranco.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtContadorBranco.setText("___");

        jButton1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/save.png"))); // NOI18N
        jButton1.setText("Gravar em .txt");
        jButton1.setPreferredSize(new java.awt.Dimension(141, 39));
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagens/icon_128x128.png"))); // NOI18N
        jButton2.setText("   Zerar Votos");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton2MousePressed(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbVoto)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rbNome)
                                .addGap(79, 79, 79)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbPartido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContadorCandidatos)
                            .addComponent(txtContadorNulo)
                            .addComponent(txtContadorBranco)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(238, 238, 238)
                        .addComponent(jLabel6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 65, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(rbNome)
                    .addComponent(cbPartido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(rbVoto)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtContadorBranco))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtContadorNulo))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtContadorCandidatos)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2)))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MousePressed
        dispose();
    }//GEN-LAST:event_jButton3MousePressed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
     BrancoDAO brancoDAO = new BrancoDAO();
     ResultSet rs = brancoDAO.obterVotosBrancos();     
     carregarQuantidadeVotoBranco(rs);
     
     NuloDAO nuloDAO = new NuloDAO();
     ResultSet rs1 = nuloDAO.obterVotosNulos();     
     carregarQuantidadeVotoNulo(rs1);
      
     CandidatoDAO candidatoDAO = new CandidatoDAO(); 
     ResultSet rs2 = candidatoDAO.obterSomaVotos();  
      carregarTotalVotoCandidatos(rs2);
     
     PartidoDAO partidoDAO = new PartidoDAO();
     ResultSet rs3 = partidoDAO.obterPartidos();
     carregarComboPartidos(rs3);     
     
     CandidatoDAO candidatoDAO1 = new CandidatoDAO();
     ResultSet rs4 = candidatoDAO1.obterCandidatos();       
     carregarTabelaCandidatos(rs4);       
        
     
     
     
    }//GEN-LAST:event_formWindowOpened

    private void cbPartidoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cbPartidoKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPartidoKeyReleased

    private void cbPartidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPartidoActionPerformed

     CandidatoDAO candidatoDAO = new CandidatoDAO();
     ResultSet rs1 = null;
     
      partidoSelecionado = cbPartido.getSelectedItem().toString();
         
      if(rbNome.isSelected())
      {       
          if(partidoSelecionado.equals("")){
            rs1 = candidatoDAO.ordenarPorNome();
          }          
          else{
          rs1 = candidatoDAO.pesquisarCandidatoPorPartidoORDENADO(partidoSelecionado);
          }
          
          carregarTabelaCandidatos(rs1);          
      }
      
      if(rbVoto.isSelected())
      {       
          if(partidoSelecionado.equals("")){
            rs1 = candidatoDAO.ordenarPorVotos();
          }          
          else{
          rs1 = candidatoDAO.pesquisarCandidatoPorPartidoOrdenadoPorVotos(partidoSelecionado);
          }          
          carregarTabelaCandidatos(rs1);          
      }     
      
      else{
          
     if(partidoSelecionado.equals("")){     
     rs1 = candidatoDAO.obterCandidatos();
     carregarTabelaCandidatos(rs1);
        
     }
     else{         
     rs1 = candidatoDAO.pesquisarCandidatoPorPartido(partidoSelecionado); 
     carregarTabelaCandidatos(rs1);
     }
      }
    }//GEN-LAST:event_cbPartidoActionPerformed

    private void rbNomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbNomeMousePressed
     CandidatoDAO candidatoDAO = new CandidatoDAO();
     ResultSet rs = null;      
     
     
     partidoSelecionado = cbPartido.getSelectedItem().toString();
     
     if(partidoSelecionado.equals("")){
         rs = candidatoDAO.ordenarPorNome();  
     }
     else
     {
      rs = candidatoDAO.pesquisarCandidatoPorPartidoORDENADO(partidoSelecionado);
     }
     
    carregarTabelaCandidatos(rs);
    }//GEN-LAST:event_rbNomeMousePressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
    
    }//GEN-LAST:event_formWindowActivated

    private void rbVotoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rbVotoMousePressed
        CandidatoDAO candidatoDAO = new CandidatoDAO();
     ResultSet rs = null;      
     
     
     partidoSelecionado = cbPartido.getSelectedItem().toString();
     
     if(partidoSelecionado.equals("")){
         rs = candidatoDAO.ordenarPorVotos();  
     }
     else
     {
      rs = candidatoDAO.pesquisarCandidatoPorPartidoOrdenadoPorVotos(partidoSelecionado);
     }
     
    carregarTabelaCandidatos(rs);
        
        
        
    }//GEN-LAST:event_rbVotoMousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
               
        Gravar.votosCandidatosRelatorio = quantidadeTotal;
        Gravar.votosNulosRelatorio = quantidadeNulo;
        Gravar.votosBrancosRelatorio = quantidadeBranco;
//        
//        
//        try {
//            Gravar gravar = new Gravar();
//        gravar.salvaArquivo();
//        } catch (Exception ex) {
//        }
//        
//        
       
    ArrayList<StringBuilder> linhas = new ArrayList<StringBuilder>();  
     
    int in;
    
    for(int i = 0; i< tbCandidatos.getRowCount(); i++){  
       b = new StringBuilder();  
              
       
       for(int j = 0; j < tbCandidatos.getColumnCount(); j++){  
            b.append(String.format("%-20s",tbCandidatos.getValueAt(i,j=0)));
            b.append(String.format("%-20s",tbCandidatos.getValueAt(i,j=1))); 
            b.append(String.format("%-4s",tbCandidatos.getValueAt(i,j=2))); 
            
            
       }  
       linhas.add(b);  
    }  
       Gravar.sb = b;
       Gravar.linhasGlobal = linhas;
       
               try {
            Gravar gravar = new Gravar();
        gravar.gravar(partidoSelecionado);
        } catch (Exception ex) {
        }
        
 
       
        
    }//GEN-LAST:event_jButton1MousePressed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rbNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbNomeActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MousePressed
        
        CandidatoDAO cDAO = new CandidatoDAO();
        NuloDAO nDAO = new NuloDAO();
        BrancoDAO bDAO = new BrancoDAO();
        
        bDAO.alterarQuantidadeVotoBranco(0);
        nDAO.alterarQuantidadeVotoNulo(0);
        cDAO.zerarVotosCandidatos(0);
        
        
     BrancoDAO brancoDAO = new BrancoDAO();
     ResultSet rs = brancoDAO.obterVotosBrancos();     
     carregarQuantidadeVotoBranco(rs);
     
     NuloDAO nuloDAO = new NuloDAO();
     ResultSet rs1 = nuloDAO.obterVotosNulos();     
     carregarQuantidadeVotoNulo(rs1);
      
     CandidatoDAO candidatoDAO = new CandidatoDAO(); 
     ResultSet rs2 = candidatoDAO.obterSomaVotos();  
      carregarTotalVotoCandidatos(rs2);     
     
     CandidatoDAO candidatoDAO1 = new CandidatoDAO();
     ResultSet rs4 = candidatoDAO1.obterCandidatos();       
     carregarTabelaCandidatos(rs4);
        
        
        
        
        
    }//GEN-LAST:event_jButton2MousePressed

       

   public void carregarQuantidadeVotoBranco(ResultSet rs) {
            
        try {           
            while(rs.next()) {                 
                String linha[] = new String[]{                    
                    rs.getString("votoBranco")                    
                };
              
             quantidadeBranco  = (rs.getInt("votoBranco")); 
             txtContadorBranco.setText(""+quantidadeBranco);
            }
                      
        } 
        catch (Exception e) {
            System.out.println("Erro ao carregar nome: " + e.getMessage());            
        }       
    }    
   
   public void carregarQuantidadeVotoNulo(ResultSet rs) {
           
        try {           
            while(rs.next()) {                 
                String linha[] = new String[]{                    
                    rs.getString("votoNulo")                    
                };
              
              quantidadeNulo = (rs.getInt("votoNulo")); 
              txtContadorNulo.setText("" + quantidadeNulo);
            }
                      
        } 
        catch (Exception e) {
            System.out.println("Erro ao carregar nome: " + e.getMessage());            
        }       
    }
   
   public void carregarTotalVotoCandidatos(ResultSet rs) {
         
        int soma = 0;
        try {           
            if(rs.first()) {                 
                soma =                    
                    rs.getInt("sum_value");                    
                      }
              
              quantidadeTotal = (rs.getInt("sum_value")); 
              txtContadorCandidatos.setText("" + quantidadeTotal);
            }
                      
         
        catch (Exception e) {
            System.out.println("Erro ao carregar o BD: " + e.getMessage());            
        }       
    }  
   
   public void carregarComboPartidos(ResultSet rs) {
        PartidoDAO dAO2 = new PartidoDAO();
        
        try {           
            while(rs.next()) { 
                
                PartidoDAO partidoDAO = new PartidoDAO();
                String linha[] = new String[]{                    
                    rs.getString("nome")                    
                };             
               
               cbPartido.addItem(rs.getString("nome"));
            }      
            
        }        
        catch (Exception e) {
            System.out.println("Erro ao carregar nome: " + e.getMessage());            
        }       
    } 
   
   
   
   public  void carregarTabelaCandidatos(ResultSet rs) {
        String colunas[] = new String[]{"Nome", "Partido", "Votos"};
        DefaultTableModel modeloTabela = new DefaultTableModel(null, colunas)//null são as linhas ainda não preenchidas
        {  
            public boolean isCellEditable(int rowIndex, int mColIndex) {  //evita editar conteúdo das células
                return false;  
            }  
        };//null são as linhas ainda não preenchidas
        tbCandidatos.setModel(modeloTabela);        
        
        DefaultTableCellRenderer centralizado = new DefaultTableCellRenderer();
        centralizado.setHorizontalAlignment(SwingConstants.CENTER);  
        
        tbCandidatos.getColumnModel().getColumn(0).setCellRenderer(centralizado);  
        tbCandidatos.getColumnModel().getColumn(1).setCellRenderer(centralizado);  
        tbCandidatos.getColumnModel().getColumn(2).setCellRenderer(centralizado);
        
        
        
        try {
            while (rs.next()) {
                String linha[] = new String[]{                    
                    rs.getString("nome"),
                    rs.getString("partido"),
                    rs.getString("votos")
                      
                };
                modeloTabela.addRow(linha);
                
            }
        } catch (Exception e) {
            System.out.println("Erro ao carregar tabela: " + e.getMessage());
        }   
                
        
    } 
   
   
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultadosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultadosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultadosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultadosVIEW.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResultadosVIEW().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox cbPartido;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rbNome;
    private javax.swing.JRadioButton rbVoto;
    private javax.swing.JTable tbCandidatos;
    private javax.swing.JLabel txtContadorBranco;
    private javax.swing.JLabel txtContadorCandidatos;
    private javax.swing.JLabel txtContadorNulo;
    // End of variables declaration//GEN-END:variables
}
